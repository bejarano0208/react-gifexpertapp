{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","element","idx","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAbS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAQ,IAI7BR,GAAe,SAACS,GAAD,OAAMP,GAAN,mBAAoBO,OACnCN,EAAc,MAKd,SACI,6BACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,e,+BCRlBG,EAAM,uCAAC,WAAOC,GAAP,uBAAAC,EAAA,6DACVC,EADU,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEVG,EAFU,gBAGGA,EAAKC,OAHR,uBAGTC,EAHS,EAGTA,KAGDC,EAAKD,EAAKE,KAAK,SAAAC,GAAG,YACnB,CACGC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVzB,kBAeTM,GAfS,4CAAD,sDCENO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAY,IAAD,EAEVd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAkBpC,OAXAC,qBAAU,WACNxB,EAAOC,GACFwB,MAAM,SAAAC,GAAI,OAAGH,EAAS,CACnBf,KAAKkB,EACLL,SAAS,SAGlB,CAACpB,IAIGqB,EDbqBK,CAAa1B,GAAlCoB,EAH6B,EAG7BA,QAAaP,EAHgB,EAGrBN,KAQf,OACI,qCACI,6BAAKP,IACJoB,GAAS,wCACV,qBAAKJ,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAACC,GAAD,OAEA,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEW1BgB,EAhCI,WAAI,MAGiBzC,mBAAS,CAAC,cAH3B,mBAGZ0C,EAHY,KAGA3C,EAHA,KAUnB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAACoB,EAAQC,GAAT,OACZ,cAAC,EAAD,CAEI9B,SAAU6B,GADLA,Y,MClBjCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39ee9cd5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length<=2){\r\n            return;\r\n        }\r\n\r\n        setCategories( (c)=>[inputValue,...c]);\r\n        setinputValue(\"\");\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </h2>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGif=async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6sNOxjuDfl4rLWrwzpTewCwDe1rDJNEo`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n    \r\n    \r\n    const gifs=data.map( img=>\r\n        ({\r\n            id:img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        })\r\n    );\r\n\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GridGifItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__jello\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GridGifItem } from './GridGifItem';\r\n// import { getGif } from './helpers/getGifs';\r\n\r\nexport const GifGrid =  ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const {loading,data:images}=useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading&&<p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( (img)=>\r\n                    (\r\n                            <GridGifItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                    )\r\n                )\r\n            }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../components/helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then( imgs=> setState({\r\n                data:imgs,\r\n                loading: false\r\n            } ));\r\n  \r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp=()=>{\r\n\r\n    //const categories=[\"One Punch\",\"Samurai X\",\"Dragon ball\"]\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n\r\n    // const handleAdd=()=>{\r\n    //     setcategories([\"Naruto\",...categories])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( (element,idx) =>(\r\n                        <GifGrid\r\n                            key={element}\r\n                            category={element}\r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n//crear componente llamadao GifExpertApp"],"sourceRoot":""}